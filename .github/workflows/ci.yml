name: a1to5x

on:
  workflow_dispatch:
     inputs:
       mode:
         description: 'Download mode(wget or aria2c or curl)'
         required: true
         default: 'aria2c'
       filename:
         description: 'ROM NAME'
         required: true
       id:
         description: 'Gdrive ID'
         required: true
       release:
         description: 'Upload to Release'
         required: true
         default: 'true'

jobs:
  a1to5x:
    runs-on: ubuntu-18.04
    continue-on-error: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: init
        name: Initialization environment
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install git openjdk-8-jdk wget curl rsync aria2 python python3 unzip device-tree-compiler brotli simg2img img2simg
          pip3 install protobuf
          pip install brotli
          if [[ ! -z "$(echo ${{ github.event.inputs.id }} | grep "download")" ]]; then
              id=$(echo ${{ github.event.inputs.id }} | sed 's/&export=download//')
              id=$(echo ${id} | sed 's#https://drive.google.com/##' | sed 's#u/0/##' | sed 's#uc?id=##')
              echo "::set-output name=id::${id}"
          elif [[ ! -z "$(echo ${{ github.event.inputs.id }} | grep "view")" ]]; then
              id=$(echo ${{ github.event.inputs.id }} | sed 's#https://drive.google.com/file/d/##' | sed 's#/view##' | cut -d ? -f 1)
              echo "::set-output name=id::${id}"
          else
              id=${{ github.event.inputs.id }}
              echo "::set-output name=id::${id}"
          fi
          NAME="${{ github.event.inputs.filename }}"
          if [[ ! -z "$(echo ${NAME} | grep ".zip")" ]]; then
              echo "::set-output name=filename::${NAME%.*}"
              echo "${{ github.event.inputs.filename }}"
          else
              echo "::set-output name=filename::${{ github.event.inputs.filename }}"
              echo "Null value"
          fi

      - id: var
        name: Download
        run: |
          echo "Download"
          confirm="$(wget --quiet --save-cookies cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=${{ steps.init.outputs.id }}' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')"
          echo $confirm
          cat cookies.txt
          echo "${{ steps.init.outputs.id }}"
          echo "${{ steps.init.outputs.filename }}"
          if [[ "${{ github.event.inputs.mode }}" == 'wget' ]]; then
              wget --load-cookies cookies.txt "https://docs.google.com/uc?export=download&confirm="${confirm}"&id=${{ steps.init.outputs.id }}" -O ${{ steps.init.outputs.filename }}.zip && rm -rf cookies.txt
          elif [[ "${{ github.event.inputs.mode }}" == 'aria2c' ]]; then
              aria2c --load-cookies=cookies.txt "https://docs.google.com/uc?export=download&confirm="${confirm}"&id=${{ steps.init.outputs.id }}" -o ${{ steps.init.outputs.filename }}.zip && rm -rf cookies.txt
          elif [[ "${{ github.event.inputs.mode }}" == 'curl' ]]; then
              curl -c ./cookie -s -L "https://drive.google.com/uc?export=download&id=${{ steps.init.outputs.id }}" > /dev/null
              curl -Lb ./cookie "https://drive.google.com/uc?export=download&confirm=`awk '/download/ {print $NF}' ./cookie`&id=${{ steps.init.outputs.id }}" -o ${{ steps.init.outputs.filename }}.zip
              rm -rf ./cookie
          fi
          ls -al

      - name: Upload to Release
        if: github.event.inputs.release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.init.outputs.filename }}.zip
          name: ${{ steps.init.outputs.filename }}
          tag_name: ${{ github.run_id }}
          body: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE }}
